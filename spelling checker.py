from openai import OpenAI
from k import getApiKey

api_key = getApiKey()

'''
Corrects spelling and grammar errors in the given text.

Inputs:
- pText (str)

Output:
- response (str)
(The corrected text generated by the GPT-4o model.)

Constraints:
- pText must be a valid string.
- An internet connection is required to communicate with the OpenAI API and use the GPT-4o model.
'''

def correctText(pText):
    client = OpenAI(api_key=api_key)
    messages = [{"role": "system", "content": "You are a spelling and grammar checker for texts, you must indicate and enumerate the errors found and provide correction suggestions."}]
    messages.append({"role": "user", "content": pText})
    completion = client.chat.completions.create(
        model="gpt-4o",
        messages=messages
    )
    response = completion.choices[0].message.content
    return response

'''
Provides the final correction for the given text.

Inputs:
- pText (str)

Output:
- response (str)
(The final corrected text generated by the GPT-4o model.)

Constraints:
- pText must be a valid string.
- An internet connection is required to communicate with the OpenAI API and use the GPT-4o model.
'''

def finalCorrection(pText):
    client = OpenAI(api_key=api_key)
    messages = [{"role": "system", "content": "You are a spelling and grammar checker for texts, you just need to provide the corrected text."}]
    messages.append({"role": "user", "content": pText})
    completion = client.chat.completions.create(
        model="gpt-4o",
        messages=messages
    )
    response = completion.choices[0].message.content
    return response

'''
Applies the correction to the original text based on user's decision.

Inputs:
- pText (str)
- correction (str)

Output:
- correctedText (str)
(The final corrected text based on user's decision.)

Constraints:
- pText and correction must be valid strings.
'''

def applyCorrection(pText, correction):
    print("Original Text:", pText)
    print(correction)
    decision = input("Do you accept the suggestion? (yes/no): ").strip().lower()
    if decision == "no":
        return f"Final Text: {pText}"
    else:
        return f"Final Text: {finalCorrection(pText)}"

pText = input("Please enter your text: ")
correction = correctText(pText)
correctedText = applyCorrection(pText, correction)
print(correctedText)
